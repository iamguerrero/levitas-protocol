/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MockUSDC, MockUSDCInterface } from "../../contracts/MockUSDC";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "faucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001fe338038062001fe383398181016040528101906200003791906200058e565b806040518060400160405280600981526020017f4d6f636b205553444300000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f6d555344430000000000000000000000000000000000000000000000000000008152508160039081620000b591906200083a565b508060049081620000c791906200083a565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013f5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000136919062000932565b60405180910390fd5b62000150816200019860201b60201c565b506200019181620001666200025e60201b60201c565b600a62000174919062000adf565b633b9aca0062000185919062000b30565b6200026760201b60201c565b5062000c21565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006006905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002dc5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620002d3919062000932565b60405180910390fd5b620002f060008383620002f460201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200034a5780600260008282546200033d919062000b7b565b9250508190555062000420565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015620003d9578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620003d09392919062000bc7565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200046b5780600260008282540392505081905550620004b8565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000517919062000c04565b60405180910390a3505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005568262000529565b9050919050565b620005688162000549565b81146200057457600080fd5b50565b60008151905062000588816200055d565b92915050565b600060208284031215620005a757620005a662000524565b5b6000620005b78482850162000577565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200064257607f821691505b602082108103620006585762000657620005fa565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006c27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000683565b620006ce868362000683565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200071b620007156200070f84620006e6565b620006f0565b620006e6565b9050919050565b6000819050919050565b6200073783620006fa565b6200074f620007468262000722565b84845462000690565b825550505050565b600090565b6200076662000757565b620007738184846200072c565b505050565b5b818110156200079b576200078f6000826200075c565b60018101905062000779565b5050565b601f821115620007ea57620007b4816200065e565b620007bf8462000673565b81016020851015620007cf578190505b620007e7620007de8562000673565b83018262000778565b50505b505050565b600082821c905092915050565b60006200080f60001984600802620007ef565b1980831691505092915050565b60006200082a8383620007fc565b9150826002028217905092915050565b6200084582620005c0565b67ffffffffffffffff811115620008615762000860620005cb565b5b6200086d825462000629565b6200087a8282856200079f565b600060209050601f831160018114620008b257600084156200089d578287015190505b620008a985826200081c565b86555062000919565b601f198416620008c2866200065e565b60005b82811015620008ec57848901518255600182019150602085019450602081019050620008c5565b868310156200090c578489015162000908601f891682620007fc565b8355505b6001600288020188555050505b505050505050565b6200092c8162000549565b82525050565b600060208201905062000949600083018462000921565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115620009dd57808604811115620009b557620009b46200094f565b5b6001851615620009c55780820291505b8081029050620009d5856200097e565b945062000995565b94509492505050565b600082620009f8576001905062000acb565b8162000a08576000905062000acb565b816001811462000a21576002811462000a2c5762000a62565b600191505062000acb565b60ff84111562000a415762000a406200094f565b5b8360020a91508482111562000a5b5762000a5a6200094f565b5b5062000acb565b5060208310610133831016604e8410600b841016171562000a9c5782820a90508381111562000a965762000a956200094f565b5b62000acb565b62000aab84848460016200098b565b9250905081840481111562000ac55762000ac46200094f565b5b81810290505b9392505050565b600060ff82169050919050565b600062000aec82620006e6565b915062000af98362000ad2565b925062000b287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620009e6565b905092915050565b600062000b3d82620006e6565b915062000b4a83620006e6565b925082820262000b5a81620006e6565b9150828204841483151762000b745762000b736200094f565b5b5092915050565b600062000b8882620006e6565b915062000b9583620006e6565b925082820190508082111562000bb05762000baf6200094f565b5b92915050565b62000bc181620006e6565b82525050565b600060608201905062000bde600083018662000921565b62000bed602083018562000bb6565b62000bfc604083018462000bb6565b949350505050565b600060208201905062000c1b600083018462000bb6565b92915050565b6113b28062000c316000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a9059cbb11610066578063a9059cbb1461023b578063dd62ed3e1461026b578063de5f72fd1461029b578063f2fde38b146102a5576100ea565b8063715018a6146101f55780638da5cb5b146101ff57806395d89b411461021d576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806340c10f19146101a957806370a08231146101c5576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102c1565b6040516101049190610e46565b60405180910390f35b61012760048036038101906101229190610f01565b610353565b6040516101349190610f5c565b60405180910390f35b610145610376565b6040516101529190610f86565b60405180910390f35b61017560048036038101906101709190610fa1565b610380565b6040516101829190610f5c565b60405180910390f35b6101936103af565b6040516101a09190611010565b60405180910390f35b6101c360048036038101906101be9190610f01565b6103b8565b005b6101df60048036038101906101da919061102b565b6103ce565b6040516101ec9190610f86565b60405180910390f35b6101fd610416565b005b61020761042a565b6040516102149190611067565b60405180910390f35b610225610454565b6040516102329190610e46565b60405180910390f35b61025560048036038101906102509190610f01565b6104e6565b6040516102629190610f5c565b60405180910390f35b61028560048036038101906102809190611082565b610509565b6040516102929190610f86565b60405180910390f35b6102a3610590565b005b6102bf60048036038101906102ba919061102b565b6105c2565b005b6060600380546102d0906110f1565b80601f01602080910402602001604051908101604052809291908181526020018280546102fc906110f1565b80156103495780601f1061031e57610100808354040283529160200191610349565b820191906000526020600020905b81548152906001019060200180831161032c57829003601f168201915b5050505050905090565b60008061035e610648565b905061036b818585610650565b600191505092915050565b6000600254905090565b60008061038b610648565b9050610398858285610662565b6103a38585856106f7565b60019150509392505050565b60006006905090565b6103c06107eb565b6103ca8282610872565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61041e6107eb565b61042860006108f4565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610463906110f1565b80601f016020809104026020016040519081016040528092919081815260200182805461048f906110f1565b80156104dc5780601f106104b1576101008083540402835291602001916104dc565b820191906000526020600020905b8154815290600101906020018083116104bf57829003601f168201915b5050505050905090565b6000806104f1610648565b90506104fe8185856106f7565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600061059a6103af565b600a6105a69190611284565b6127106105b391906112cf565b90506105bf3382610872565b50565b6105ca6107eb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361063c5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106339190611067565b60405180910390fd5b610645816108f4565b50565b600033905090565b61065d83838360016109ba565b505050565b600061066e8484610509565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156106f157818110156106e1578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016106d893929190611311565b60405180910390fd5b6106f0848484840360006109ba565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107695760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107609190611067565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107db5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107d29190611067565b60405180910390fd5b6107e6838383610b91565b505050565b6107f3610648565b73ffffffffffffffffffffffffffffffffffffffff1661081161042a565b73ffffffffffffffffffffffffffffffffffffffff161461087057610834610648565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108679190611067565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108e45760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108db9190611067565b60405180910390fd5b6108f060008383610b91565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a2c5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a239190611067565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a9e5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a959190611067565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b8b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b829190610f86565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610be3578060026000828254610bd79190611348565b92505081905550610cb6565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c6f578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c6693929190611311565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cff5780600260008282540392505081905550610d4c565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610da99190610f86565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610df0578082015181840152602081019050610dd5565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e1882610db6565b610e228185610dc1565b9350610e32818560208601610dd2565b610e3b81610dfc565b840191505092915050565b60006020820190508181036000830152610e608184610e0d565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e9882610e6d565b9050919050565b610ea881610e8d565b8114610eb357600080fd5b50565b600081359050610ec581610e9f565b92915050565b6000819050919050565b610ede81610ecb565b8114610ee957600080fd5b50565b600081359050610efb81610ed5565b92915050565b60008060408385031215610f1857610f17610e68565b5b6000610f2685828601610eb6565b9250506020610f3785828601610eec565b9150509250929050565b60008115159050919050565b610f5681610f41565b82525050565b6000602082019050610f716000830184610f4d565b92915050565b610f8081610ecb565b82525050565b6000602082019050610f9b6000830184610f77565b92915050565b600080600060608486031215610fba57610fb9610e68565b5b6000610fc886828701610eb6565b9350506020610fd986828701610eb6565b9250506040610fea86828701610eec565b9150509250925092565b600060ff82169050919050565b61100a81610ff4565b82525050565b60006020820190506110256000830184611001565b92915050565b60006020828403121561104157611040610e68565b5b600061104f84828501610eb6565b91505092915050565b61106181610e8d565b82525050565b600060208201905061107c6000830184611058565b92915050565b6000806040838503121561109957611098610e68565b5b60006110a785828601610eb6565b92505060206110b885828601610eb6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061110957607f821691505b60208210810361111c5761111b6110c2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156111a85780860481111561118457611183611122565b5b60018516156111935780820291505b80810290506111a185611151565b9450611168565b94509492505050565b6000826111c1576001905061127d565b816111cf576000905061127d565b81600181146111e557600281146111ef5761121e565b600191505061127d565b60ff84111561120157611200611122565b5b8360020a91508482111561121857611217611122565b5b5061127d565b5060208310610133831016604e8410600b84101617156112535782820a90508381111561124e5761124d611122565b5b61127d565b611260848484600161115e565b9250905081840481111561127757611276611122565b5b81810290505b9392505050565b600061128f82610ecb565b915061129a83610ff4565b92506112c77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846111b1565b905092915050565b60006112da82610ecb565b91506112e583610ecb565b92508282026112f381610ecb565b9150828204841483151761130a57611309611122565b5b5092915050565b60006060820190506113266000830186611058565b6113336020830185610f77565b6113406040830184610f77565b949350505050565b600061135382610ecb565b915061135e83610ecb565b925082820190508082111561137657611375611122565b5b9291505056fea2646970667358221220eb75034a5671b44a47e2c6a998092f5d58ab5c05ce698e30e4364960e3ac5a1164736f6c63430008150033";

type MockUSDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockUSDCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockUSDC__factory extends ContractFactory {
  constructor(...args: MockUSDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      MockUSDC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockUSDC__factory {
    return super.connect(runner) as MockUSDC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUSDCInterface {
    return new Interface(_abi) as MockUSDCInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockUSDC {
    return new Contract(address, _abi, runner) as unknown as MockUSDC;
  }
}
